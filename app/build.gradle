plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlinx-serialization'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    namespace 'com.gerapp.whatincinema'
    compileSdk 34

    defaultConfig {
        applicationId "com.gerapp.whatincinema"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "AUTH_TOKEN", "\"" + localProperties['AUTH_TOKEN'] + "\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$compose_version"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.all {
            it.useJUnitPlatform()
        }
    }
}

dependencies {
    //CORE
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    //COMPOSE
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint_layout"


    //PAGINATION
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:$compose_paging_version"

    //RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    //ROOM
//    implementation "androidx.room:room-runtime:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
//    implementation "androidx.room:room-paging:$room_version"
//    kapt "androidx.room:room-compiler:$room_version"
//    ksp "androidx.room:room-compiler:$room_version"

    //okHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"

    //Coil (Image Uploading)
    implementation "com.google.accompanist:accompanist-coil:0.12.0"
    implementation "io.coil-kt:coil-compose:2.4.0"

    //LOGGER
    implementation "com.jakewharton.timber:timber:5.0.1"

    //Material3
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"

    //HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$compose_hilt_navigation_version"


    //ROOM
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    //TESTS
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"

    testImplementation "io.mockk:mockk-android:$mockk_version"
    testImplementation "io.mockk:mockk-agent:$mockk_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //DEBUG
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}